// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeListing.Migrations
{
    [DbContext(typeof(EmployeeListingDBcontext))]
    [Migration("20220801035200_Initial2")]
    partial class Initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmployeeListing.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"), 1L, 1);

                    b.Property<int>("className")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            className = 6,
                            isActive = true
                        },
                        new
                        {
                            ClassId = 2,
                            className = 7,
                            isActive = true
                        },
                        new
                        {
                            ClassId = 3,
                            className = 8,
                            isActive = true
                        });
                });

            modelBuilder.Entity("EmployeeListing.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeClass")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("MailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qualification")
                        .HasColumnType("int");

                    b.Property<string>("RegisterNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isAdminAccepted")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeId");

                    b.HasIndex("EmployeeClass");

                    b.HasIndex("GenderId");

                    b.HasIndex("Qualification");

                    b.HasIndex("RoleId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DateOfBirth = new DateTime(1990, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeClass = 1,
                            EmployeeName = "Prithvi",
                            GenderId = 1,
                            MailId = "prithvi.palani@aspiresys.com",
                            Password = "Pass@12345",
                            Qualification = 1,
                            RegisterNumber = "PSNA0001",
                            RoleId = 1,
                            SubjectId = 1,
                            isActive = true,
                            isAdminAccepted = false
                        },
                        new
                        {
                            EmployeeId = 2,
                            DateOfBirth = new DateTime(1993, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeClass = 2,
                            EmployeeName = "Vinodhini",
                            GenderId = 2,
                            MailId = "vinoth.jayakumar@aspiresys.com",
                            Password = "Pass@12345",
                            Qualification = 1,
                            RegisterNumber = "PSNA0002",
                            RoleId = 2,
                            SubjectId = 2,
                            isActive = true,
                            isAdminAccepted = false
                        },
                        new
                        {
                            EmployeeId = 3,
                            DateOfBirth = new DateTime(1992, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeClass = 1,
                            EmployeeName = "Sheik",
                            GenderId = 1,
                            MailId = "sheik.farid@aspiresys.com",
                            Password = "Pass@12345",
                            Qualification = 2,
                            RegisterNumber = "PSNA0003",
                            RoleId = 3,
                            SubjectId = 3,
                            isActive = true,
                            isAdminAccepted = false
                        });
                });

            modelBuilder.Entity("EmployeeListing.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"), 1L, 1);

                    b.Property<string>("GenderName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = 1,
                            GenderName = "Male",
                            isActive = true
                        },
                        new
                        {
                            GenderId = 2,
                            GenderName = "Female",
                            isActive = true
                        },
                        new
                        {
                            GenderId = 3,
                            GenderName = "Others",
                            isActive = true
                        });
                });

            modelBuilder.Entity("EmployeeListing.Models.Qualification", b =>
                {
                    b.Property<int>("QualificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QualificationId"), 1L, 1);

                    b.Property<string>("QualificationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("QualificationId");

                    b.ToTable("Qualification");

                    b.HasData(
                        new
                        {
                            QualificationId = 1,
                            QualificationName = "M.A Tamil",
                            isActive = true
                        },
                        new
                        {
                            QualificationId = 2,
                            QualificationName = "B.A Tamil",
                            isActive = true
                        },
                        new
                        {
                            QualificationId = 3,
                            QualificationName = "M.A English",
                            isActive = true
                        },
                        new
                        {
                            QualificationId = 4,
                            QualificationName = "B.A English",
                            isActive = true
                        },
                        new
                        {
                            QualificationId = 5,
                            QualificationName = "M.A B.Ed",
                            isActive = true
                        },
                        new
                        {
                            QualificationId = 6,
                            QualificationName = "B.A B.Ed",
                            isActive = true
                        });
                });

            modelBuilder.Entity("EmployeeListing.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin",
                            isActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "HM",
                            isActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "User",
                            isActive = true
                        });
                });

            modelBuilder.Entity("EmployeeListing.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"), 1L, 1);

                    b.Property<string>("SubjectName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            SubjectName = "Tamil",
                            isActive = true
                        },
                        new
                        {
                            SubjectId = 2,
                            SubjectName = "English",
                            isActive = true
                        },
                        new
                        {
                            SubjectId = 3,
                            SubjectName = "Maths",
                            isActive = true
                        });
                });

            modelBuilder.Entity("EmployeeListing.Models.Employee", b =>
                {
                    b.HasOne("EmployeeListing.Models.Class", "EmpClass")
                        .WithMany()
                        .HasForeignKey("EmployeeClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeListing.Models.Gender", "gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeListing.Models.Qualification", "Qualifications")
                        .WithMany()
                        .HasForeignKey("Qualification")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeListing.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeListing.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpClass");

                    b.Navigation("Qualifications");

                    b.Navigation("Role");

                    b.Navigation("Subject");

                    b.Navigation("gender");
                });
#pragma warning restore 612, 618
        }
    }
}
